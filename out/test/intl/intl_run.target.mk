# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := intl_run
### Generated for rule _cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate:
$(builddir)/intl.isolated: obj := $(abs_obj)
$(builddir)/intl.isolated: builddir := $(abs_builddir)
$(builddir)/intl.isolated: TOOLSET := $(TOOLSET)
$(builddir)/intl.isolated: $(srcdir)/test/intl/intl.isolate $(srcdir)/tools/isolate_driver.py $(srcdir)/tools/swarming_client/isolate.py $(srcdir)/tools/swarming_client/run_isolated.py
	$(call do_cmd,_cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_0)

all_deps += $(builddir)/intl.isolated
cmd__cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_0 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/test/intl; mkdir -p $(builddir); python ../../tools/isolate_driver.py check --isolated "$(builddir)/intl.isolated" --isolate "$(abspath $<)" --path-variable DEPTH ../.. --path-variable PRODUCT_DIR "$(builddir)" --config-variable "CONFIGURATION_NAME=$(BUILDTYPE)" --config-variable "OS=linux" --config-variable "asan=0" --config-variable "cfi_vptr=0" --config-variable "icu_use_data_file_flag=0" --config-variable "msan=0" --config-variable "tsan=0" --config-variable "component=static_library" --config-variable "target_arch=x64" --config-variable "use_custom_libcxx=0" --config-variable "v8_use_external_startup_data=1" --config-variable "v8_use_snapshot=true" --config-variable "msvs_version=0"
quiet_cmd__cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_0 = RULE _cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_0 $@

rule__cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_outputs := \
	$(builddir)/intl.isolated

### Finished generating for rule: _cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate

### Finished generating for all rules

DEFS_Debug := \
	'-DCR_CLANG_REVISION=255169-1' \
	'-DV8_TARGET_ARCH_X64' \
	'-DENABLE_DISASSEMBLER' \
	'-DV8_ENABLE_CHECKS' \
	'-DOBJECT_PRINT' \
	'-DVERIFY_HEAP' \
	'-DTRACE_MAPS' \
	'-D_GLIBCXX_DEBUG=1' \
	'-DENABLE_SLOW_DCHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-Wno-unused-parameter \
	-Wno-long-long \
	-pthread \
	-Wno-missing-field-initializers \
	-Wno-gnu-zero-variadic-macro-arguments \
	-fvisibility=hidden \
	-B/cbcode/v8/third_party/binutils/Linux_x64/Release/bin \
	-Wno-deprecated-register \
	-Wno-deprecated-declarations \
	-Wno-logical-op-parentheses \
	-Wno-tautological-compare \
	-Wno-switch \
	-Wno-format-pedantic \
	-m64 \
	-g \
	-O0 \
	-Woverloaded-virtual \
	 \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-exceptions \
	-fno-rtti \
	-std=gnu++0x

INCS_Debug :=

DEFS_Optdebug := \
	'-DCR_CLANG_REVISION=255169-1' \
	'-DV8_TARGET_ARCH_X64' \
	'-DENABLE_DISASSEMBLER' \
	'-DV8_ENABLE_CHECKS' \
	'-DOBJECT_PRINT' \
	'-DVERIFY_HEAP' \
	'-DTRACE_MAPS' \
	'-D_GLIBCXX_DEBUG=1'

# Flags passed to all source files.
CFLAGS_Optdebug := \
	-Wno-unused-parameter \
	-Wno-long-long \
	-pthread \
	-Wno-missing-field-initializers \
	-Wno-gnu-zero-variadic-macro-arguments \
	-fvisibility=hidden \
	-B/cbcode/v8/third_party/binutils/Linux_x64/Release/bin \
	-Wno-deprecated-register \
	-Wno-deprecated-declarations \
	-Wno-logical-op-parentheses \
	-Wno-tautological-compare \
	-Wno-switch \
	-Wno-format-pedantic \
	-m64 \
	-g \
	-Woverloaded-virtual \
	 \
	-fdata-sections \
	-ffunction-sections \
	-O3

# Flags passed to only C files.
CFLAGS_C_Optdebug :=

# Flags passed to only C++ files.
CFLAGS_CC_Optdebug := \
	-fno-exceptions \
	-fno-rtti \
	-std=gnu++0x

INCS_Optdebug :=

DEFS_Release := \
	'-DCR_CLANG_REVISION=255169-1' \
	'-DV8_TARGET_ARCH_X64'

# Flags passed to all source files.
CFLAGS_Release := \
	-Wno-unused-parameter \
	-Wno-long-long \
	-pthread \
	-Wno-missing-field-initializers \
	-Wno-gnu-zero-variadic-macro-arguments \
	-fvisibility=hidden \
	-B/cbcode/v8/third_party/binutils/Linux_x64/Release/bin \
	-Wno-deprecated-register \
	-Wno-deprecated-declarations \
	-Wno-logical-op-parentheses \
	-Wno-tautological-compare \
	-Wno-switch \
	-Wno-format-pedantic \
	-m64 \
	-fdata-sections \
	-ffunction-sections \
	 \
	-O3

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-exceptions \
	-fno-rtti \
	-std=gnu++0x

INCS_Release :=

OBJS :=

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/src/d8_run.stamp

# Make sure our actions/rules run before any of us.
$(OBJS): | $(rule__cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_outputs)


### Rules for final target.
# Build our special outputs first.
$(obj).target/test/intl/intl_run.stamp: | $(rule__cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_outputs)

# Preserve order dependency of special output on deps.
$(rule__cbcode_v8_test_intl_intl_gyp_intl_run_target_isolate_outputs): | $(obj).target/src/d8_run.stamp

$(obj).target/test/intl/intl_run.stamp: TOOLSET := $(TOOLSET)
$(obj).target/test/intl/intl_run.stamp: $(obj).target/src/d8_run.stamp FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/test/intl/intl_run.stamp
# Add target alias
.PHONY: intl_run
intl_run: $(obj).target/test/intl/intl_run.stamp

# Add target alias to "all" target.
.PHONY: all
all: intl_run

